{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; //API\n\nimport API from \"../API\";\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0\n};\nexport const useHomeFetch = () => {\n  _s();\n\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const fetchMovies = async (searchTerm = \"\", page) => {\n    try {\n      setLoading(true);\n      setError(false);\n      const movies = await API.fetchMovies(searchTerm, page);\n      setState(prev => ({ ...movies,\n        results: page > 1 ? [...prev.results, ...movies.results] : movies.results\n      }));\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  }; //Initial render\n\n\n  useEffect(() => {\n    fetchMovies(1);\n  }, []);\n  return {\n    state,\n    loading,\n    error\n  };\n};\n\n_s(useHomeFetch, \"bBNy6uHjIE4xrjuLB+3z0XWLfiI=\");","map":{"version":3,"sources":["C:/Users/MONSTER/OneDrive - Pamukkale University/Masaüstü/React/react-rmdb-v3-starter-files-master/2. Project to start from - WITHOUT Styles/react-rmdb-START-HERE/src/hooks/useHookFetch.js"],"names":["useState","useEffect","API","initialState","page","results","total_pages","total_results","useHomeFetch","state","setState","loading","setLoading","error","setError","fetchMovies","searchTerm","movies","prev"],"mappings":";;AAAA,SAAQA,QAAR,EAAmBC,SAAnB,QAAmC,OAAnC,C,CAEA;;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,CADW;AAEjBC,EAAAA,OAAO,EAAG,EAFO;AAGjBC,EAAAA,WAAW,EAAE,CAHI;AAIjBC,EAAAA,aAAa,EAAE;AAJE,CAArB;AAQA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAkBV,QAAQ,CAACG,YAAD,CAAhC;AACA,QAAM,CAACQ,OAAD,EAASC,UAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;;AAGA,QAAMe,WAAW,GAAG,OAAOC,UAAU,GAAG,EAApB,EAAwBZ,IAAxB,KAAiC;AACjD,QAAG;AACCQ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,YAAMG,MAAM,GAAG,MAAMf,GAAG,CAACa,WAAJ,CAAgBC,UAAhB,EAA4BZ,IAA5B,CAArB;AAGAM,MAAAA,QAAQ,CAACQ,IAAI,KAAK,EACd,GAAGD,MADW;AAEdZ,QAAAA,OAAO,EACHD,IAAI,GAAG,CAAP,GAAW,CAAC,GAAGc,IAAI,CAACb,OAAT,EAAkB,GAAGY,MAAM,CAACZ,OAA5B,CAAX,GAAkDY,MAAM,CAACZ;AAH/C,OAAL,CAAL,CAAR;AAKH,KAZD,CAYC,OAAMQ,KAAN,EAAY;AACTC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AACDF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAjBD,CAP8B,CAyB9B;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,WAAW,CAAC,CAAD,CAAX;AACH,GAFQ,EAEP,EAFO,CAAT;AAIA,SAAO;AAACN,IAAAA,KAAD;AAASE,IAAAA,OAAT;AAAmBE,IAAAA;AAAnB,GAAP;AAEH,CAhCM;;GAAML,Y","sourcesContent":["import {useState , useEffect} from 'react';\r\n\r\n//API\r\n\r\nimport API from \"../API\"\r\n\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results : [],\r\n    total_pages: 0,\r\n    total_results: 0,\r\n}\r\n\r\n\r\nexport const useHomeFetch = () => {\r\n\r\n    const [state,setState]= useState(initialState)\r\n    const [loading,setLoading]= useState(false)\r\n    const [error, setError] = useState(false)\r\n\r\n\r\n    const fetchMovies = async (searchTerm = \"\", page) => {\r\n        try{\r\n            setLoading(true)\r\n            setError(false)\r\n\r\n            const movies = await API.fetchMovies(searchTerm, page)\r\n            \r\n\r\n            setState(prev => ({\r\n                ...movies,\r\n                results:\r\n                    page > 1 ? [...prev.results, ...movies.results] : movies.results\r\n            }))\r\n        }catch(error){\r\n            setError(true)\r\n        }\r\n        setLoading(false)\r\n    }\r\n    //Initial render\r\n    useEffect(() => {\r\n        fetchMovies(1)\r\n    },[])\r\n\r\n    return {state , loading , error}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}